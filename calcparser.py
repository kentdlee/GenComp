
from parser import *

class calcParser(Parser):
	def __init__(self):
		super().__init__({0: LR0State(0,frozenset({LR0Item(0,Production(0,7,[8, 6],'Prog'),0,set()), LR0Item(1,Production(1,8,[8, 9, 5],'None'),0,set()), LR0Item(2,Production(2,8,[],'None'),0,{0, 1, 6})}),{8: 1},False), 1: LR0State(1,frozenset({LR0Item(2,Production(3,9,[10],'print(E)'),0,set()), LR0Item(3,Production(0,7,[8, 6],'Prog'),1,set()), LR0Item(3,Production(1,8,[8, 9, 5],'None'),1,set()), LR0Item(3,Production(4,10,[10, 3, 11],'int(E)+int(T)'),0,set()), LR0Item(4,Production(5,10,[11],'T'),0,set()), LR0Item(5,Production(6,11,[11, 4, 12],'int(T)*int(F)'),0,set()), LR0Item(6,Production(7,11,[12],'F'),0,set()), LR0Item(7,Production(8,12,[0],'number'),0,set()), LR0Item(8,Production(9,12,[1, 10, 2],'E'),0,set())}),{0: 2, 1: 3, 6: 4, 9: 5, 10: 6, 11: 7, 12: 8},False), 2: LR0State(2,frozenset({LR0Item(9,Production(8,12,[0],'number'),1,{2, 3, 4, 5})}),{},False), 3: LR0State(3,frozenset({LR0Item(1,Production(4,10,[10, 3, 11],'int(E)+int(T)'),0,set()), LR0Item(9,Production(9,12,[1, 10, 2],'E'),1,set()), LR0Item(2,Production(5,10,[11],'T'),0,set()), LR0Item(3,Production(6,11,[11, 4, 12],'int(T)*int(F)'),0,set()), LR0Item(4,Production(7,11,[12],'F'),0,set()), LR0Item(5,Production(8,12,[0],'number'),0,set()), LR0Item(6,Production(9,12,[1, 10, 2],'E'),0,set())}),{0: 2, 1: 3, 10: 14, 11: 7, 12: 8},False), 4: LR0State(4,frozenset({LR0Item(9,Production(0,7,[8, 6],'Prog'),2,set())}),{},True), 5: LR0State(5,frozenset({LR0Item(9,Production(1,8,[8, 9, 5],'None'),2,set())}),{5: 13},False), 6: LR0State(6,frozenset({LR0Item(9,Production(3,9,[10],'print(E)'),1,{5}), LR0Item(9,Production(4,10,[10, 3, 11],'int(E)+int(T)'),1,set())}),{3: 11},False), 7: LR0State(7,frozenset({LR0Item(9,Production(5,10,[11],'T'),1,{2, 3, 4, 5}), LR0Item(9,Production(6,11,[11, 4, 12],'int(T)*int(F)'),1,set())}),{4: 9},False), 8: LR0State(8,frozenset({LR0Item(9,Production(7,11,[12],'F'),1,{2, 3, 4, 5})}),{},False), 9: LR0State(9,frozenset({LR0Item(1,Production(8,12,[0],'number'),0,set()), LR0Item(2,Production(9,12,[1, 10, 2],'E'),0,set()), LR0Item(2,Production(6,11,[11, 4, 12],'int(T)*int(F)'),2,set())}),{0: 2, 1: 3, 12: 10},False), 10: LR0State(10,frozenset({LR0Item(3,Production(6,11,[11, 4, 12],'int(T)*int(F)'),3,{2, 3, 4, 5})}),{},False), 11: LR0State(11,frozenset({LR0Item(1,Production(6,11,[11, 4, 12],'int(T)*int(F)'),0,set()), LR0Item(2,Production(7,11,[12],'F'),0,set()), LR0Item(2,Production(4,10,[10, 3, 11],'int(E)+int(T)'),2,set()), LR0Item(3,Production(8,12,[0],'number'),0,set()), LR0Item(4,Production(9,12,[1, 10, 2],'E'),0,set())}),{0: 2, 1: 3, 11: 12, 12: 8},False), 12: LR0State(12,frozenset({LR0Item(5,Production(6,11,[11, 4, 12],'int(T)*int(F)'),1,set()), LR0Item(5,Production(4,10,[10, 3, 11],'int(E)+int(T)'),3,{2, 3, 4, 5})}),{4: 9},False), 13: LR0State(13,frozenset({LR0Item(1,Production(1,8,[8, 9, 5],'None'),3,{0, 1, 6})}),{},False), 14: LR0State(14,frozenset({LR0Item(7,Production(4,10,[10, 3, 11],'int(E)+int(T)'),1,set()), LR0Item(7,Production(9,12,[1, 10, 2],'E'),2,set())}),{2: 15, 3: 11},False), 15: LR0State(15,frozenset({LR0Item(2,Production(9,12,[1, 10, 2],'E'),3,{2, 3, 4, 5})}),{},False)},['number', "'('", "')'", "'+'", "'*'", "';'", 'endoffile', 'Start', 'Prog', 'Stmt', 'E', 'T', 'F'],)

	def eval(self,expression):
		return eval(expression)
